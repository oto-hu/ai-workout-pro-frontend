# AI Workout Pro - Production Environment Variables Template
# 
# IMPORTANT: 
# 1. Copy this file to .env.production.local for Vercel deployment
# 2. Replace all placeholder values with actual production values
# 3. NEVER commit actual production values to version control
# 4. Use your hosting platform's environment variable management

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Production Domain Configuration
NEXT_PUBLIC_BASE_URL=https://your-production-domain.com
NODE_ENV=production

# =============================================================================
# AUTHENTICATION & AUTHORIZATION
# =============================================================================

# NextAuth.js Configuration
NEXTAUTH_URL=https://your-production-domain.com
NEXTAUTH_SECRET=REPLACE_WITH_SECURE_RANDOM_STRING_MIN_32_CHARS
AUTH_SECRET=REPLACE_WITH_SECURE_RANDOM_STRING_MIN_32_CHARS

# Google OAuth 2.0 (Production App)
# Get from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your_production_google_client_id.googleusercontent.com
GOOGLE_CLIENT_SECRET=GOCSPX-your_production_google_client_secret

# GitHub OAuth App (Production App)
# Get from: https://github.com/settings/applications/new
GITHUB_CLIENT_ID=your_production_github_client_id
GITHUB_CLIENT_SECRET=your_production_github_client_secret

# =============================================================================
# DATABASE & SUPABASE (PRODUCTION)
# =============================================================================

# Supabase Production Project
# Get from: https://supabase.com/dashboard/project/[your-project]/settings/api
NEXT_PUBLIC_SUPABASE_URL=https://your-project-ref.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your_production_anon_key
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your_production_service_role_key

# Database Connection (Alternative to Supabase)
# DATABASE_URL=postgresql://username:password@hostname:port/database_name

# =============================================================================
# AI SERVICES (PRODUCTION)
# =============================================================================

# OpenAI API (Production)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-your_production_openai_api_key

# Anthropic API (Alternative/Backup)
# Get from: https://console.anthropic.com/
# ANTHROPIC_API_KEY=sk-ant-api03-your_production_anthropic_api_key

# AI Configuration (Production Optimized)
AI_MODEL=gpt-4
MAX_TOKENS=2000
TEMPERATURE=0.7

# AI Rate Limiting (Production Values)
RATE_LIMIT_DELAY=1000
CACHE_DURATION=300000

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS Configuration (Production Domains Only)
ALLOWED_ORIGINS=https://your-production-domain.com,https://www.your-production-domain.com

# Security Headers
FORCE_HTTPS=true
HSTS_MAX_AGE=31536000

# =============================================================================
# PERFORMANCE & MONITORING
# =============================================================================

# Performance Configuration
ENABLE_COMPRESSION=true
ENABLE_CACHING=true
CDN_URL=https://your-cdn-domain.com

# Monitoring & Analytics
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# =============================================================================
# FEATURE FLAGS & CONFIGURATION
# =============================================================================

# Feature Flags
ENABLE_AI_GENERATION=true
ENABLE_OAUTH_LOGIN=true
ENABLE_ANALYTICS=true

# Rate Limiting (Production Values)
API_RATE_LIMIT=100
WORKOUT_GENERATION_RATE_LIMIT=10
RATE_LIMIT_WINDOW=3600000

# =============================================================================
# LOGGING & DEBUGGING
# =============================================================================

# Logging Configuration
LOG_LEVEL=warn
ENABLE_REQUEST_LOGGING=false
ENABLE_ERROR_REPORTING=true

# Debug Configuration (Should be disabled in production)
DEBUG=false
VERBOSE_LOGGING=false

# =============================================================================
# BACKUP & MAINTENANCE
# =============================================================================

# Maintenance Mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE="Scheduled maintenance in progress. Please try again later."

# =============================================================================
# DEPLOYMENT INFORMATION
# =============================================================================

# Build Information (Set by CI/CD)
# BUILD_ID=
# BUILD_TIMESTAMP=
# GIT_COMMIT_SHA=
# DEPLOYMENT_ENVIRONMENT=production

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Email Service (Optional)
# SMTP_HOST=smtp.your-email-provider.com
# SMTP_PORT=587
# SMTP_USER=your-email@domain.com
# SMTP_PASS=your-smtp-password

# File Storage (Optional)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-production-bucket

# =============================================================================
# INSTRUCTIONS FOR DEPLOYMENT
# =============================================================================

# 1. VERCEL DEPLOYMENT:
#    - Copy these variables to Vercel dashboard: https://vercel.com/dashboard
#    - Go to Project Settings > Environment Variables
#    - Add each variable with its production value

# 2. NETLIFY DEPLOYMENT:
#    - Go to Site Settings > Environment Variables
#    - Add each variable with its production value

# 3. HEROKU DEPLOYMENT:
#    - Use: heroku config:set VARIABLE_NAME=value
#    - Or add via Heroku dashboard

# 4. DOCKER DEPLOYMENT:
#    - Create docker-compose.production.yml with environment variables
#    - Use Docker secrets for sensitive values

# 5. AWS/GCP DEPLOYMENT:
#    - Use AWS Parameter Store / GCP Secret Manager
#    - Reference secrets in your deployment configuration

# =============================================================================
# SECURITY CHECKLIST
# =============================================================================

# Before going live, ensure:
# ✅ All placeholder values are replaced
# ✅ Secrets are properly generated (use: openssl rand -base64 32)
# ✅ OAuth apps are configured for production domains
# ✅ Database is properly configured with RLS
# ✅ Rate limits are appropriate for production traffic
# ✅ Monitoring and error tracking are enabled
# ✅ All sensitive values are in environment variables, not code

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common Issues:
# - OAuth redirects: Ensure callback URLs match exactly
# - CORS errors: Check ALLOWED_ORIGINS includes your domain
# - Database errors: Verify connection strings and RLS policies
# - AI API errors: Check API keys and rate limits
# - Build errors: Ensure all required variables are set

# For support: [Add your support contact information]